version: "3.8"
services:
  spark-master:
    image: bitnami/spark:latest
    hostname: spark-master
    ports:
      - "8080:8080"
      - "7077:7077"
    networks:
      - spark-network
    environment:
      - SPARK_MODE=master
      - SPARK_MASTER_HOST=0.0.0.0
      - SPARK_MASTER_PORT=7077
      - SPARK_MASTER_WEBUI_PORT=8080
      - SPARK_PUBLIC_DNS=<Master_Public_IP>
    volumes:
      - /home/ubuntu/ml-100k:/data
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.spark == master

  spark-worker:
    image: bitnami/spark:latest
    networks:
      - spark-network
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    deploy:
      mode: global
    ports:
      - "8081:8081"
    volumes:
      - /home/ubuntu/ml-100k:/data

  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    hostname: namenode
    environment:
      - CLUSTER_NAME=hadoop-cluster
      - HDFS_NAMENODE_USER=root
    ports:
      - "9870:9870"
      - "9000:9000"
    volumes:
      - namenode:/hadoop/dfs/name
    networks:
      - spark-network
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.spark == master

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    hostname: datanode
    environment:
      - CLUSTER_NAME=hadoop-cluster
      - SERVICE_PRECONDITION=namenode:9870
    volumes:
      - datanode:/hadoop/dfs/data
    networks:
      - spark-network
    depends_on:
      - namenode
    deploy:
      mode: global

volumes:
  namenode:
  datanode:

networks:
  spark-network:
    driver: overlay
